plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'java'
    id 'com.netflix.dgs.codegen' version '5.6.0'
}

group = 'com.isntyet.java'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // spring cloud
    implementation platform("org.springframework.cloud:spring-cloud-dependencies:2021.0.5")
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // db
    implementation 'com.h2database:h2'
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.2.1'
    implementation 'mysql:mysql-connector-java:8.0.28'

    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:5.0.0"
    implementation "com.querydsl:querydsl-core:5.0.0"
    implementation "com.querydsl:querydsl-apt:5.0.0"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")

    // excel
    implementation 'org.dhatim:fastexcel:0.14.18'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation('org.assertj:assertj-core:3.15.0')
    testImplementation 'org.testcontainers:testcontainers:1.15.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.15.3'
    testImplementation 'org.testcontainers:mariadb:1.15.3'
    runtimeOnly 'mysql:mysql-connector-java'

    // DGS
    implementation(platform("com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:5.5.1"))
    implementation("com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter")
    implementation("com.netflix.graphql.dgs:graphql-dgs-extended-scalars")
//    implementation("com.netflix.graphql.dgs:graphql-dgs-pagination")
}

generateJava {
    typeMapping = [
            "BigDecimal"   : "java.math.BigDecimal",
            "Long"         : "java.lang.Long",
            "LinkedHashSet": "java.util.LinkedHashSet"
    ]
}

test {
    useJUnitPlatform()
    systemProperty 'user.timezone', 'UTC'
}

def queryDslDir = "./out/production/classes"

sourceSets {
    main.java.srcDir queryDslDir
}

clean {
    delete file("${queryDslDir}")
}
